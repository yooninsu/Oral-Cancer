# Initial
rm(list = ls())
# Set directory
getwd()
setwd('/Users/User/Desktop/OC/')
library(rjson)
library(tidyverse)
library(TCGAbiolinks)
library(maftools)
library(writexl)
library(magrittr)
library(readxl)
# Find projects in GDC
proj <- getGDCprojects()
c_metadata <- fromJSON(file = 'GDC_OC_2025_06_01/gc_cart_metadata.json')
c_sample_sheet <- read_tsv(file = 'GDC_OC_2025_06_01/gc_cart_sample_sheet.tsv')
c_metadata_df <- data.frame(barcode = sapply(c_metadata, function(x) x$associated_entities[[1]]$entity_submitter_id),
file_id = sapply(c_metadata, function(x) x$file_id),
file_name = sapply(c_metadata, function(x) x$file_name),
stringsAsFactors = FALSE)
View(c_sample_sheet)
c_sample_sheet_df <- c_sample_sheet[,c('File ID', 'File Name', 'Tissue Type', 'Tumor Descriptor', 'Project ID')] %>%
set_colnames(c('file_id', 'file_name', 'sample_type', 'tumor_descriptor', 'project'))
merge_df <- merge(c_metadata_df, c_sample_sheet_df, by = c('file_id', 'file_name'))
View(merge_df)
project <- c_sample_sheet$`Project ID` %>% table() %>% names()
query <- GDCquery(project = project,
data.category = 'Transcriptome Profiling',
data.type = 'Gene Expression Quantification',
experimental.strategy = 'RNA-Seq',
workflow.type = 'STAR - Counts',
barcode = barcode)
View(c_metadata_df)
query <- GDCquery(project = project,
data.category = 'Transcriptome Profiling',
data.type = 'Gene Expression Quantification',
experimental.strategy = 'RNA-Seq',
workflow.type = 'STAR - Counts',
barcode = c_metadata_df$barcode)
GDCdownload(query = query, directory = 'GDC/', files.per.chunk = 10)
oc <- GDCprepare(query = query, directory = 'GDC/', summarizedExperiment = F)
oc <- GDCprepare(query = query, directory = 'GDC/', summarizedExperiment = T)
project[1]
# project <- c_sample_sheet$`Project ID` %>% table() %>% names()
# barcode <- c_metadata_df$barcode
query <- GDCquery(project = project[2],
data.category = 'Transcriptome Profiling',
data.type = 'Gene Expression Quantification',
experimental.strategy = 'RNA-Seq',
workflow.type = 'STAR - Counts',
barcode = c_metadata_df$barcode)
oc <- GDCprepare(query = query, directory = 'GDC/', summarizedExperiment = T)
View(oc)
View(oc)
oc_count <- assays(oc)
oc_count <- oc@assays@data@listData[["unstranded"]]
head(oc_count)
oc_count <- assay(oc)
library(SummarizedExperiment)
oc_count <- assay(oc)
View(oc_count)
oc_meta<- colData(oc)
View(oc_meta)
oc_meta <- colData(oc)
oc_meta <- colData(oc)@listData
oc_meta <- colData(oc)@listData %>% data.frame()
genes <- rowData(oc)
View(genes)
oc_count <- assay(oc) %>% as.data.frame()
genes <- rowData(oc) %>% as.data.frame()
View(oc_count)
oc_meta <- colData(oc) %>% as.data.frame()
View(oc_meta)
all(colnames(oc_count) == oc_meta$barcode)
all(colnames(oc_count) == oc_meta$barcode)
View(oc_meta)
# all(colnames(oc_count) == oc_meta$barcode) # TRUE
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta_sel$tissue_or_organ_of_origin %>% table()
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% -c('Vulva, NOS'),]
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% c('Upper Gum', 'Tongue, NOS',
'Overlapping lesion of lip, oral cavity and pharynx',
'Mouth, NOS', 'Lymph nodes of head, face and neck',
'Hard palate', 'Gum, NOS', 'Floor of mouth, NOS',
'Base of tongue, NOS'), ]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")]
oc_count <- assay(oc)
oc_count
View(genes)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id'))
View(genes)
genes <- rowData(oc) %>% as.data.frame() #%>% select(c('gene_id'))
View(genes)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type'))
View(genes)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type')) %>% set_colnames(NULL)
View(genes)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type')) %>% set_rownames(NULL)
genes$gene_type %>% table()
genes <- genes[genes$gene_type %in% c('proten_coding'),]
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type')) %>% set_rownames(NULL)
genes <- genes[genes$gene_type %in% c('protein_coding'), ]
genes <- genes[genes$gene_type %in% c('protein_coding'), ] %>% select(c('gene_id', 'gene_name'))
View(genes)
oc_count_sel <- oc_count[, oc_meta_sel$barcode]
oc_count_sel <- oc_count_sel[rownames(oc_count_sel) %in% genes$gene_id,]
dim(oc_count_sel)
genes_matched <- genes[match(rownames(oc_count_sel), genes$gene_id), ]
# rownames를 gene_name으로 변경
rownames(oc_count_sel) <- genes_matched$gene_name
dim(oc_count_sel)
duplicated(oc_count_sel)
duplicated(oc_count_sel) %>% summary()
oc_count <- assay(oc)
oc_count_sel <- oc_count[, oc_meta_sel$barcode]
oc_count_sel <- oc_count_sel[rownames(oc_count_sel) %in% genes$gene_id,]
rownames(oc_count_sel) <- genes$gene_name[match(rownames(oc_count_sel), genes$gene_id)]
all(colnames(oc_count_sel) == rownames(oc_meta_sel))
oc_count_sel <- oc_count[, rownames(oc_meta_sel)]
oc_meta_sel <- oc_meta_sel[, c("tissue_type")]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")] %>% column_to_rownames(var = 'barcode')
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")] %>% column_to_rownames(var = barcode)
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")] %>% column_to_rownames(var = c(barcode))
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")] %>% column_to_rownames(var = c('barcode'))
oc_meta <- colData(oc) %>% as.data.frame()
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% c('Upper Gum', 'Tongue, NOS',
'Overlapping lesion of lip, oral cavity and pharynx',
'Mouth, NOS', 'Lymph nodes of head, face and neck',
'Hard palate', 'Gum, NOS', 'Floor of mouth, NOS',
'Base of tongue, NOS'), ]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")] %>% column_to_rownames(var = c('barcode'))
oc_meta <- colData(oc) %>% as.data.frame() %>% set_rownames(NULL)
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% c('Upper Gum', 'Tongue, NOS',
'Overlapping lesion of lip, oral cavity and pharynx',
'Mouth, NOS', 'Lymph nodes of head, face and neck',
'Hard palate', 'Gum, NOS', 'Floor of mouth, NOS',
'Base of tongue, NOS'), ]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")] %>% column_to_rownames(var = 'barcode')
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
View(oc_meta_sel)
oc_meta <- colData(oc) %>% as.data.frame() %>% set_rownames(NULL)
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% c('Upper Gum', 'Tongue, NOS',
'Overlapping lesion of lip, oral cavity and pharynx',
'Mouth, NOS', 'Lymph nodes of head, face and neck',
'Hard palate', 'Gum, NOS', 'Floor of mouth, NOS',
'Base of tongue, NOS'), ]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")]
oc_meta_sel <- column_to_rownames(oc_meta_sel, var = 'barcode')
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta <- colData(oc) %>% as.data.frame() %>% set_rownames(NULL)
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% c('Upper Gum', 'Tongue, NOS',
'Overlapping lesion of lip, oral cavity and pharynx',
'Mouth, NOS', 'Lymph nodes of head, face and neck',
'Hard palate', 'Gum, NOS', 'Floor of mouth, NOS',
'Base of tongue, NOS'), ]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")]
rownames(oc_meta_sel) <- NULL
oc_meta_sel <- column_to_rownames(oc_meta_sel, var = "barcode")
oc_meta_sel <- column_to_rownames(oc_meta_sel, var = "barcode") %>% as.factor()
oc_meta <- colData(oc) %>% as.data.frame() %>% set_rownames(NULL)
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% c('Upper Gum', 'Tongue, NOS',
'Overlapping lesion of lip, oral cavity and pharynx',
'Mouth, NOS', 'Lymph nodes of head, face and neck',
'Hard palate', 'Gum, NOS', 'Floor of mouth, NOS',
'Base of tongue, NOS'), ]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")]
rownames(oc_meta_sel) <- NULL
oc_meta_sel <- column_to_rownames(oc_meta_sel, var = "barcode")
oc_meta <- colData(oc) %>% as.data.frame()
oc_meta_sel <- oc_meta[, c("barcode", "tissue_type", "tissue_or_organ_of_origin")]
oc_meta_sel <- oc_meta_sel[oc_meta_sel$tissue_or_organ_of_origin %in% c('Upper Gum', 'Tongue, NOS',
'Overlapping lesion of lip, oral cavity and pharynx',
'Mouth, NOS', 'Lymph nodes of head, face and neck',
'Hard palate', 'Gum, NOS', 'Floor of mouth, NOS',
'Base of tongue, NOS'), ]
oc_meta_sel <- oc_meta_sel[, c("barcode", "tissue_type")]
rownames(oc_meta_sel) <- NULL
oc_meta_sel <- column_to_rownames(oc_meta_sel, var = "barcode")
oc_meta_sel <- as.factor(oc_meta_sel)
oc_meta_sel$tissue_type <- as.factor(oc_meta_sel$tissue_type)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type')) %>% set_rownames(NULL)
genes <- genes[genes$gene_type %in% c('protein_coding'), ] %>% select(c('gene_id', 'gene_name'))
oc_count <- assay(oc)
oc_count_sel <- oc_count[, rownames(oc_meta_sel)]
oc_count_sel <- oc_count_sel[rownames(oc_count_sel) %in% genes$gene_id,]
oc_count <- assay(oc)
oc_count_sel <- oc_count[, rownames(oc_meta_sel)]
oc_count <- assay(oc)
oc_count_sel <- oc_count[, rownames(oc_meta_sel)]
oc_count_sel <- oc_count_sel[rownames(oc_count_sel) %in% genes$gene_id,]
rownames(oc_count_sel) <- genes$gene_name[match(rownames(oc_count_sel), genes$gene_id)]
all(colnames(oc_count_sel) == rownames(oc_meta_sel))
View(oc_count_sel)
oc_count_sel_mean <- apply(oc_count_sel, 2, tapply, rownames(oc_count_sel), mean)
all(colnames(oc_count_sel) == rownames(oc_meta_sel))
ddsobj <- DESeqDataSetFromMatrix(countData = round(oc_count_sel_mean),
colData = oc_meta_sel,
design = ~ tissue_type)
ddsobj <- DESeqDataSetFromMatrix(countData = round(oc_count_sel_mean),
colData = oc_meta_sel,
design = ~ tissue_type)
oc_count_sel_mean <- apply(oc_count_sel, 2, tapply, rownames(oc_count_sel), mean) %>% round()
ddsobj <- DESeqDataSetFromMatrix(countData = oc_count_sel_mean,
colData = oc_meta_sel,
design = ~ tissue_type)
all(colnames(oc_count_sel) == rownames(oc_meta_sel))
ddsobj <- DESeqDataSetFromMatrix(countData = oc_count_sel_mean,
colData = oc_meta_sel,
design = ~ tissue_type)
library(DESeq2)
ddsobj <- DESeqDataSetFromMatrix(countData = oc_count_sel_mean,
colData = oc_meta_sel,
design = ~ tissue_type)
filt <- min(matrixStats::count(oc_meta_sel$tissue_type == 'Tumor'),
matrixStats::count(oc_meta_sel$tissue_type == 'Normal'))
keep <- rowSums(counts(ddsobj) >= 10) >= filt
ddsobj.filt <- ddsobj[keep,]
# DESeq2
dds <- DESeq(object = ddsobj.filt, fitType = 'local')
# Results and filter DEGs
res <- results(object = dds, contrast = c('tissue_type', 'Tumor', 'Normal'))
res_gene <- res %>% data.frame()
deg_gene <- res_gene %>% filter(!is.na(x = padj), padj <= 0.05, abs(log2FoldChange) >= 1)
View(deg_gene)
View(deg_gene)
View(res_gene)
View(genes)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type')) %>% set_rownames(NULL)
View(genes)
View(oc_count)
oc_count_sel <- oc_count[, rownames(oc_meta_sel)]
oc_count_sel <- oc_count_sel[rownames(oc_count_sel) %in% genes$gene_id,]
View(oc_count_sel)
rownames(oc_count_sel) <- genes$gene_name[match(rownames(oc_count_sel), genes$gene_id)]
View(oc_count_sel)
oc_count_sel_mean <- apply(oc_count_sel, 2, tapply, rownames(oc_count_sel), mean) %>% round()
View(oc_count_sel_mean)
View(res_gene)
all(colnames(oc_count_sel) == rownames(oc_meta_sel))
ddsobj <- DESeqDataSetFromMatrix(countData = oc_count_sel_mean,
colData = oc_meta_sel,
design = ~ tissue_type)
# DESeq2
dds <- DESeq(object = ddsobj.filt, fitType = 'local')
# Results and filter DEGs
res <- results(object = dds, contrast = c('tissue_type', 'Tumor', 'Normal'))
res_gene <- res %>% data.frame()
View(res_gene)
View(genes)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type')) %>% set_rownames(NULL)
genes <- rowData(oc)
genes <- rowData(oc) %>% as.data.frame() %>% select(c('gene_id', 'gene_name', 'gene_type')) %>% set_rownames(NULL)
genes <- rowData(oc)
View(genes)
genes <- rowData(oc) %>% as.data.frame()
View(oc_count_sel_mean)
oc_count_sel_mean['SLC22A8']
oc_count_sel_mean["SLC22A8", ]
oc_count_sel_mean["SLC22A6", ]
oc_count_sel_mean["SLC22A12", ]
oc_count_sel_mean["SLC2A9", ]
View(deg_gene)
View(res_gene)
